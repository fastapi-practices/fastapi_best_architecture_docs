import{_ as p,c as d,a as e,f as t,h as s,b as n,w as l,r,o}from"./app-DqtJ7nxx.js";const h={},c={class:"hint-container caution"};function k(A,i){const a=r("VPLink");return o(),d("div",null,[i[7]||(i[7]=e("p",null,"我们通过自定义依赖组件，实现了 RBAC 的轻松集成，它可以通过 FastAPI Depends 轻松集成",-1)),e("div",c,[i[3]||(i[3]=e("p",{class:"hint-container-title"},"警告",-1)),e("p",null,[i[1]||(i[1]=s("自 fba ",-1)),n(a,{href:"../../changelog.md"},{default:l(()=>[...i[0]||(i[0]=[s("v1.2.0",-1)])]),_:1}),i[2]||(i[2]=s(" 版本起，开始将【角色菜单】作为默认 RBAC 鉴权，Casbin 作为外置插件进行分发",-1))])]),i[8]||(i[8]=t(`<h2 id="角色菜单" tabindex="-1"><a class="header-anchor" href="#角色菜单"><span>角色菜单</span></a></h2><p>要想实现此 RBAC 鉴权，需要进行以下配置</p><div class="vp-steps"><ol><li><p>添加接口依赖</p><p>只有在接口中添加以下依赖时，才能自动调用此鉴权方式</p><div class="language-py line-numbers-mode" data-highlighter="shiki" data-ext="py" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-py"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">post</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span></span>
<span class="line"><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">    &#39;&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">    summary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;xxx&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">    dependencies</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[</span></span>
<span class="line highlighted"><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">        Depends</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">RequestPermission</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;sys:api:add&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)),</span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;">  # 通常为 xxx:xxx:xxx</span></span>
<span class="line highlighted"><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">        DependsRBAC</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    ],</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在系统菜单中添加权限标识</p><p>我们在接口依赖中可以看到 <code>sys:api:add</code> 之类的值，这些值正是对应着菜单中的权限标识，只有它们完全一致，并且用户拥有对应的菜单时，才可以获得相应的操作权限</p></li></ol></div><h2 id="casbin" tabindex="-1"><a class="header-anchor" href="#casbin"><span>Casbin</span></a></h2><p>此方案是 Go 语言中比较流行的解决方案，它非常灵活，可以通过模型定义多种控制规则</p>`,5)),e("p",null,[i[5]||(i[5]=s("要想实现此 RBAC 鉴权，请先 ",-1)),n(a,{href:"../../plugin/market.md"},{default:l(()=>[...i[4]||(i[4]=[s("获取插件",-1)])]),_:1}),i[6]||(i[6]=s("，然后执行以下操作",-1))]),i[9]||(i[9]=t('<div class="vp-steps"><ol><li><p>安装插件</p></li><li><p>启用鉴权</p><p>修改 <code>backend/core/conf.py</code> 文件中的 <code>RBAC_ROLE_MENU_MODE</code> 为 <code>False</code></p></li></ol></div><h2 id="解耦" tabindex="-1"><a class="header-anchor" href="#解耦"><span>解耦</span></a></h2><p>在实际项目开发中，不可能同时存在多种 RBAC 解决方案，您可以通过以下方式删除【角色菜单】集成</p><ul><li>删除 <code>backend/common/security/permission.py</code> 文件中的 <code>RequestPermission</code> 类及所有类调用</li><li>删除 <code>backend/core/conf.py</code> 文件中的 <code>RBAC_ROLE_MENU_MODE</code> 和 <code>RBAC_ROLE_MENU_EXCLUDE</code></li><li>删除 <code>backend/common/security/rbac.py</code> 文件中 <code>rbac_verify</code> 方法里面的 <code>if settings.RBAC_ROLE_MENU_MODE:</code> 条件及相关代码</li><li>删除菜单 <code>perms</code> 列及其相关的 schema 字段和 SQL 脚本</li><li>删除菜单 <code>type</code> 列中的按钮类型及其按钮类型相关的代码逻辑和 SQL 脚本</li></ul>',4))])}const g=p(h,[["render",k]]),m=JSON.parse('{"path":"/backend/reference/RBAC.html","title":"RBAC","lang":"zh-CN","frontmatter":{"title":"RBAC","description":"我们通过自定义依赖组件，实现了 RBAC 的轻松集成，它可以通过 FastAPI Depends 轻松集成 警告 自 fba 版本起，开始将【角色菜单】作为默认 RBAC 鉴权，Casbin 作为外置插件进行分发 角色菜单 要想实现此 RBAC 鉴权，需要进行以下配置 添加接口依赖 只有在接口中添加以下依赖时，才能自动调用此鉴权方式 在系统菜单中添加权...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RBAC\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-05T03:44:52.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/backend/reference/RBAC.html"}],["meta",{"property":"og:site_name","content":"FastAPI Best Architecture"}],["meta",{"property":"og:title","content":"RBAC"}],["meta",{"property":"og:description","content":"我们通过自定义依赖组件，实现了 RBAC 的轻松集成，它可以通过 FastAPI Depends 轻松集成 警告 自 fba 版本起，开始将【角色菜单】作为默认 RBAC 鉴权，Casbin 作为外置插件进行分发 角色菜单 要想实现此 RBAC 鉴权，需要进行以下配置 添加接口依赖 只有在接口中添加以下依赖时，才能自动调用此鉴权方式 在系统菜单中添加权..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-05T03:44:52.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-05T03:44:52.000Z"}]]},"readingTime":{"minutes":1.44,"words":432},"git":{"createdTime":1729925621000,"updatedTime":1749095092000},"autoDesc":true,"filePathRelative":"backend/reference/RBAC.md","headers":[],"bulletin":true}');export{g as comp,m as data};
