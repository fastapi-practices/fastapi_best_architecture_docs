import{_ as g,c as A,f as p,b as n,a as s,w as e,r as k,o,h as a}from"./app-DqtJ7nxx.js";const c="/fastapi_best_architecture_docs/images/response_model.png",B="/fastapi_best_architecture_docs/images/response_schema_model.png",y={};function F(m,i){const l=k("Icon"),d=k("Tabs"),r=k("VPLink");return o(),A("div",null,[i[7]||(i[7]=p(`<p>我们为 fba 开发了十分灵活且健全的接口响应系统，它同时适用于任何 FastAPI 应用</p><h2 id="统一返回模型" tabindex="-1"><a class="header-anchor" href="#统一返回模型"><span>统一返回模型</span></a></h2><p>在常规 web 应用开发中，通常情况下，响应结构总是统一的，但在 FastAPI 的官方教程中，并没有提示我们该如何这样做，其实，这很简单， 只需我们提供一个统一的 pydantic 模型</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">BaseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    code: </span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">int</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> CustomResponseCode.</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">HTTP_200</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.code</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    msg: </span><span style="--shiki-dark:#56B6C2;--shiki-light:#0184BC;">str</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> CustomResponseCode.</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">HTTP_200</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">.msg</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    data: Any </span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">|</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> None</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;"> =</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;"> None</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是使用此模型进行返回的示例（遵循 FastAPI 官方教程），<code>response_model</code> 参数和 <code>-&gt;</code> 类型选择其中一种方式即可，FastAPI 会在内部自动解析并获取最终响应结构</p><p><code>response_model</code> 参数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line highlighted"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;"> response_model</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">():</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;"> ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-&gt;</code> 类型：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">() -&gt; ResponseModel:</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;"> ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="schema-模式" tabindex="-1"><a class="header-anchor" href="#schema-模式"><span>Schema 模式</span></a></h2><p>上面我们已经讲解了统一返回模型，但是，FastAPI 中的优势之一还包括完全自动的 OpenAPI 和文档，如果我们全局使用 ResponseModel 做为统一响应模型，你会在 Swagger 文档得到（如图所示）</p><p><img src="`+c+`" alt="response_model"></p><p>显然，我们无法获取响应中的 data 数据结构。此时前端同事找到你，你会告诉他们，你请求一下不就行了？（没毛病，但显然不太友好），下面是我们创建的用于 Schema 模式的统一返回模型</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> ResponseSchemaModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">, Generic[SchemaT])</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    data: SchemaT</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>以下是使用此模型进行返回的示例（遵循 FastAPI 官方教程），它的用法与 ResponseModel 基本相似</p><p><code>response_model</code> 参数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line highlighted"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;"> response_model</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">ResponseSchemaModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">[</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">GetApiDetail</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">])</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">():</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ResponseSchemaModel[GetApiDetail](</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">GetApiDetail</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">...</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>-&gt;</code> 类型：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">() -&gt; ResponseSchemaModel[GetApiDetail]:</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> ResponseSchemaModel[GetApiDetail](</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">GetApiDetail</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">...</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时我们再来看一眼 Swagger 文档</p><p><img src="`+B+`" alt="response_schema_model"></p><p>我们可以看到，响应 Schema 中的 data 已经包含我们的响应体结构了，响应体结构正是解析的 <code>[]</code> 中的 Schema 模型，它们是对应的，如果返回的数据结构与 Schema 不一致，将引发解析错误</p><p>我们建议将这种方式仅用于查询接口，如果你不需要这种文档，你完全可以不使用它，而是使用更加开放的统一响应模型 ResponseModel</p><h2 id="统一返回方法" tabindex="-1"><a class="header-anchor" href="#统一返回方法"><span>统一返回方法</span></a></h2><p><code>response_base</code> 是我们做的全局响应实例，它大大简化了响应返回方式，用法如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">() -&gt; ResponseModel:</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> response_base.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">success</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">})</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">() -&gt; ResponseSchemaModel[GetApiDetail]:</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> response_base.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">success</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">GetApiDetail</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">...</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此实例包含三个返回方法：<code>success()</code>、<code>fail()</code>、<code>fast_sucess()</code></p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>它们都是同步方法，而不是异步。因为这些返回方法并不涉及 io 操作，所以，定义为异步，不但没有性能提升，反而增加了异步协程的开销</p></div>`,28)),n(d,{id:"72",data:[{id:'<Icon name="ix:success-filled" /><code v-pre>success()</code>'},{id:'<Icon name="ix:namur-failure-filled" /><code v-pre>fail()</code>'},{id:'<Icon name="ix:certificate-success-filled" /><code v-pre>fast_success()</code>'}]},{title0:e(({value:t,isActive:h})=>[n(l,{name:"ix:success-filled"}),i[0]||(i[0]=s("code",null,"success()",-1))]),title1:e(({value:t,isActive:h})=>[n(l,{name:"ix:namur-failure-filled"}),i[1]||(i[1]=s("code",null,"fail()",-1))]),title2:e(({value:t,isActive:h})=>[n(l,{name:"ix:certificate-success-filled"}),i[2]||(i[2]=s("code",null,"fast_success()",-1))]),tab0:e(({value:t,isActive:h})=>[...i[3]||(i[3]=[s("p",null,"此方法通常作为默认响应方法使用，默认返回信息如下",-1),s("div",{class:"language-json","data-highlighter":"shiki","data-ext":"json",style:{"--shiki-dark":"#abb2bf","--shiki-light":"#383A42","--shiki-dark-bg":"#282c34","--shiki-light-bg":"#FAFAFA"}},[s("pre",{class:"shiki shiki-themes one-dark-pro one-light vp-code"},[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"{")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "code"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#986801"}},"200"),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "msg"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#98C379","--shiki-light":"#50A14F"}},'"请求成功"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "data"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#0184BC"}},"null")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"}")])])])],-1)])]),tab1:e(({value:t,isActive:h})=>[...i[4]||(i[4]=[s("p",null,"此方法通常在接口响应信息为失败时使用，默认返回信息如下",-1),s("div",{class:"language-json","data-highlighter":"shiki","data-ext":"json",style:{"--shiki-dark":"#abb2bf","--shiki-light":"#383A42","--shiki-dark-bg":"#282c34","--shiki-light-bg":"#FAFAFA"}},[s("pre",{class:"shiki shiki-themes one-dark-pro one-light vp-code"},[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"{")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "code"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#986801"}},"400"),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "msg"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#98C379","--shiki-light":"#50A14F"}},'"请求错误"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "data"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#0184BC"}},"null")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"}")])])])],-1)])]),tab2:e(({value:t,isActive:h})=>[...i[5]||(i[5]=[s("p",null,"此方法通常仅用于接口返回大型 json 时，可为 json 解析性能带来质的提升，默认返回信息如下",-1),s("div",{class:"language-json","data-highlighter":"shiki","data-ext":"json",style:{"--shiki-dark":"#abb2bf","--shiki-light":"#383A42","--shiki-dark-bg":"#282c34","--shiki-light-bg":"#FAFAFA"}},[s("pre",{class:"shiki shiki-themes one-dark-pro one-light vp-code"},[s("code",{class:"language-json"},[s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"{")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "code"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#986801"}},"200"),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "msg"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#98C379","--shiki-light":"#50A14F"}},'"请求成功"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},",")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#E06C75","--shiki-light":"#E45649"}},'  "data"'),s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},": "),s("span",{style:{"--shiki-dark":"#D19A66","--shiki-light":"#0184BC"}},"null")]),a(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-dark":"#ABB2BF","--shiki-light":"#383A42"}},"}")])])])],-1)])]),_:1}),i[8]||(i[8]=p(`<h2 id="响应状态码" tabindex="-1"><a class="header-anchor" href="#响应状态码"><span>响应状态码</span></a></h2><p>在文件 <code>backend/common/response/response_code.py</code> 中内置了多种定义响应状态码的方式，我们可以根据 <code>CustomResponseCode</code> 和 <code>CustomResponse</code> 定义自己需要的的响应状态码，因为在实际项目中，响应状态码并没有统一的标准</p><p>当我们定义好自定义响应状态码之后，可以像下面这样使用</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">@router</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4078F2;">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;">get</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;/test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">def</span><span style="--shiki-dark:#61AFEF;--shiki-light:#4078F2;"> test</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">() -&gt; ResponseModel:</span></span>
<span class="line highlighted"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    res </span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;"> CustomResponse</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">code</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">0</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">, </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">msg</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;成功&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)</span></span>
<span class="line highlighted"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">    return</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;"> ResponseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">res</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">res, </span><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">data</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{</span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: </span><span style="--shiki-dark:#98C379;--shiki-light:#50A14F;">&#39;test&#39;</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="驼峰返回" tabindex="-1"><a class="header-anchor" href="#驼峰返回"><span>驼峰返回</span></a></h2><p>我们默认使用 python 下划线命名法进行数据返回，但是，在实际工作中，前端目前大多使用小驼峰命名法，所以，我们就需要对此进行一些修改来适配前端工程，在文件 <code>backend/common/schema.py</code> 中，我们有一个 <code>SchemaBase</code> 类，它是我们的全局 Schema 基础类，修改如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light has-diff vp-code"><code class="language-python"><span class="line"><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">class</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;"> SchemaBase</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">(</span><span style="--shiki-dark:#E5C07B;--shiki-light:#C18401;">BaseModel</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#C18401;">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">:</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    model_config </span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;"> ConfigDict</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(</span></span>
<span class="line diff add"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">        populate_by_name</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">True</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,  </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;"># 允许通过原始字段名或别名进行赋值</span></span>
<span class="line diff add"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">        alias_generator</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">to_camel,  </span><span style="--shiki-dark:#7F848E;--shiki-dark-font-style:italic;--shiki-light:#A0A1A7;--shiki-light-font-style:italic;"># 自动将字段名转换为小驼峰</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">        use_enum_values</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#D19A66;--shiki-light:#986801;">True</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">,</span></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;">        json_encoders</span><span style="--shiki-dark:#56B6C2;--shiki-light:#383A42;">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">{datetime: </span><span style="--shiki-dark:#C678DD;--shiki-light:#A626A4;">lambda</span><span style="--shiki-dark:#D19A66;--shiki-dark-font-style:italic;--shiki-light:#986801;--shiki-light-font-style:inherit;"> x</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">: x.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#383A42;">strftime</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">(settings.</span><span style="--shiki-dark:#D19A66;--shiki-light:#383A42;">DATETIME_FORMAT</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">)},</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>to_camel</code> 方法引入自 pydantic，详情：<a href="https://docs.pydantic.dev/latest/api/config/#pydantic.alias_generators" target="_blank" rel="noopener noreferrer">pydantic.alias_generators</a></p><p>完成以上修改后，Schema 模式和返回数据将自动转为小驼峰命名</p><h2 id="国际化" tabindex="-1"><a class="header-anchor" href="#国际化"><span>国际化</span></a></h2>`,10)),s("p",null,[n(r,{href:"./i18n.md",class:"read-more"},{default:e(()=>[...i[6]||(i[6]=[a("请移步至 ",-1),s("strong",null,"国际化",-1)])]),_:1})])])}const b=g(y,[["render",F]]),v=JSON.parse('{"path":"/backend/reference/response.html","title":"接口响应","lang":"zh-CN","frontmatter":{"title":"接口响应","description":"我们为 fba 开发了十分灵活且健全的接口响应系统，它同时适用于任何 FastAPI 应用 统一返回模型 在常规 web 应用开发中，通常情况下，响应结构总是统一的，但在 FastAPI 的官方教程中，并没有提示我们该如何这样做，其实，这很简单， 只需我们提供一个统一的 pydantic 模型 以下是使用此模型进行返回的示例（遵循 FastAPI 官方...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口响应\\",\\"image\\":[\\"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/response_model.png\\",\\"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/response_schema_model.png\\"],\\"dateModified\\":\\"2025-08-15T14:32:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/backend/reference/response.html"}],["meta",{"property":"og:site_name","content":"FastAPI Best Architecture"}],["meta",{"property":"og:title","content":"接口响应"}],["meta",{"property":"og:description","content":"我们为 fba 开发了十分灵活且健全的接口响应系统，它同时适用于任何 FastAPI 应用 统一返回模型 在常规 web 应用开发中，通常情况下，响应结构总是统一的，但在 FastAPI 的官方教程中，并没有提示我们该如何这样做，其实，这很简单， 只需我们提供一个统一的 pydantic 模型 以下是使用此模型进行返回的示例（遵循 FastAPI 官方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/response_model.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-15T14:32:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-15T14:32:54.000Z"}]]},"readingTime":{"minutes":3.84,"words":1151},"git":{"createdTime":1734535676000,"updatedTime":1755268374000},"autoDesc":true,"filePathRelative":"backend/reference/response.md","headers":[],"bulletin":true}');export{b as comp,v as data};
