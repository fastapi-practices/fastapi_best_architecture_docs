import{_ as t,c as a,f as s,o as i}from"./app-DqtJ7nxx.js";const c="/fastapi_best_architecture_docs/images/question_db_timezone.png",p="/fastapi_best_architecture_docs/images/question_sql_timezone.png",o={};function n(r,e){return i(),a("div",null,[...e[0]||(e[0]=[s('<p>我们为全局精心设计了统一时区，现在，这是一件非常轻松的工作，只需修改 <code>backend/core/conf.py</code> 中的时区配置即可改变全局时区</p><div class="hint-container caution"><p class="hint-container-title">警告</p><p>时区一旦确定，强烈建议不要后期修改，否则可能造成持久化数据时间信息紊乱！</p></div><h2 id="架构应用" tabindex="-1"><a class="header-anchor" href="#架构应用"><span>架构应用</span></a></h2><p>无论在架构何处调用时间模块，我们都应使用 <code>backend/utils/timezone.py</code> 中提供的现有方法，而不是直接调用 datetime 相关模块</p><h2 id="数据库" tabindex="-1"><a class="header-anchor" href="#数据库"><span>数据库</span></a></h2><p>在数据库中处理时区是一件令人头疼的事，常见的方式有以下 3 种：</p><ul><li>全部存读为 UTC，前端转化（利于国际化管理）</li><li>全部存读当前时区时间，根据前端传入的时区进行转换（利于本地化管理）</li><li>全部存储为数值时间戳，前端转化（极其不易管理，但易操作）</li></ul><p>让我们来看一个经典案例：</p><div class="vp-chat"><div class="vp-chat-header"><p class="vp-chat-title">群聊</p></div><div class="vp-chat-content"><div class="vp-chat-date"><span>2025-08-26 12:44:00</span></div><div class="vp-chat-message user"><div class="vp-chat-message-body"><p class="vp-chat-username">王</p><div class="message-content"><p>请教大佬，为啥我查询的时间用的不同的时区和时间戳，返回的数据却是一样的？</p><p><img src="'+c+'" alt="question_db_timezone"></p><p>数据库用的是 mysql，原则上这两个 datetime 的时间戳是不一样的，但是查出来的数据是一样的结果；</p></div></div></div><div class="vp-chat-message user"><div class="vp-chat-message-body"><p class="vp-chat-username">王</p><div class="message-content"><p>我直接写 sql 查询，这个两个是符合预期结果的，第一个有数据，第二个查不到；</p><p><img src="'+p+'" alt="question_sql_timezone"></p><p>这个切换到pg数据库后查询符合预期结果的；</p></div></div></div><div class="vp-chat-message self"><div class="vp-chat-message-body"><div class="message-content"><p><strong>timezone</strong>: not used by the MySQL dialect.</p><p>sqlalchemy 和所有 python mysql 驱动默认都不处理 mysql 时区信息，通常是直接丢弃，即便使用 TIMESTAMP 类型</p></div></div></div><div class="vp-chat-message self"><div class="vp-chat-message-body"><div class="message-content"><p>更具体的：<a href="https://github.com/sqlalchemy/sqlalchemy/issues/1985" target="_blank" rel="noopener noreferrer">sqlalchemy/1985</a></p></div></div></div></div></div><p>为此，我们使用了第 2 种解决方案，并创建了自定义 TimeZone 类型，位于 <code>backend/common/model.py</code> 文件中，我们可以通过 IDE 点击类名快捷查看使用方式</p>',10)])])}const l=t(o,[["render",n]]),m=JSON.parse('{"path":"/backend/reference/timezone.html","title":"时区","lang":"zh-CN","frontmatter":{"title":"时区","description":"我们为全局精心设计了统一时区，现在，这是一件非常轻松的工作，只需修改 backend/core/conf.py 中的时区配置即可改变全局时区 警告 时区一旦确定，强烈建议不要后期修改，否则可能造成持久化数据时间信息紊乱！ 架构应用 无论在架构何处调用时间模块，我们都应使用 backend/utils/timezone.py 中提供的现有方法，而不是直接...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"时区\\",\\"image\\":[\\"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/question_db_timezone.png\\",\\"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/question_sql_timezone.png\\"],\\"dateModified\\":\\"2025-08-27T08:09:42.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/backend/reference/timezone.html"}],["meta",{"property":"og:site_name","content":"FastAPI Best Architecture"}],["meta",{"property":"og:title","content":"时区"}],["meta",{"property":"og:description","content":"我们为全局精心设计了统一时区，现在，这是一件非常轻松的工作，只需修改 backend/core/conf.py 中的时区配置即可改变全局时区 警告 时区一旦确定，强烈建议不要后期修改，否则可能造成持久化数据时间信息紊乱！ 架构应用 无论在架构何处调用时间模块，我们都应使用 backend/utils/timezone.py 中提供的现有方法，而不是直接..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/images/question_db_timezone.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-27T08:09:42.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-27T08:09:42.000Z"}]]},"readingTime":{"minutes":1.58,"words":474},"git":{"createdTime":1756282182000,"updatedTime":1756282182000},"autoDesc":true,"filePathRelative":"backend/reference/timezone.md","headers":[],"bulletin":true}');export{l as comp,m as data};
