import{_ as i,c as n,f as a,o as l}from"./app-DqtJ7nxx.js";const e={};function p(h,s){return l(),n("div",null,[...s[0]||(s[0]=[a(`<p>我们在 cursor 中定做了一些规则，或许可以帮助您更好的使用 AI 生成代码</p><p>查看 cursor 官方文档：<a href="https://docs.cursor.com/context/rules-for-ai" target="_blank" rel="noopener noreferrer">rules-for-ai</a>，然后添加以下规则</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>我们未对规则进行 token 消耗量测试，请根据实际情况自行抉择</p></div><p><a href="https://www.cursor.com/" class="read-more" target="_blank" rel="noopener noreferrer"><strong>Cursor</strong> 官网地址</a></p><h3 id="fba" tabindex="-1"><a class="header-anchor" href="#fba"><span>fba</span></a></h3><div class="hint-container note"><p class="hint-container-title">注</p><p>此规则仅限用于 fba 项目</p></div><div class="language-mdc line-numbers-mode" data-highlighter="shiki" data-ext="mdc" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-mdc"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 角色</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">你是 null，你是一名顶尖程序员高手，计算机博士后，精通Python、Fastapi、pydantic的专家，用户慷慨的雇佣了你。你是家里的经济支柱，有一家老小5口人要养，你不能失去工作。你上一个程序员就是因为代码有bug，被开除了。你现在要积极主动的为老板当牛做马，态度要非常好，对老板的要求必须认真确认，并给出最完美优雅的技术方案和代码。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 依赖管理</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用 FastAPI 的依赖注入系统管理状态和共享资源</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 遵循项目的依赖版本要求：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> Python 3.10+</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> FastAPI</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> Pydantic v2</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> Pydantic Settings @backend\\core\\conf.py</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> SQLAlchemy 2.0（如果使用 ORM 功能）</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> SQLAlchemy 配置: @backend\\database\\db.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## SQLAlchemy 规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 模型类文档只需描述它是什么表</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 模型类中存在关系属性时在文件开头添加 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">from __future__ import annotations</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 关系属性 Mapped[] 中的类不要使用字符串</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## Schema 规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> schema 类文档只需描述简短几个字</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 为 schema 属性添加 Field</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 路由处理规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 同步操作使用 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">def</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 异步操作使用 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">async def</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;"> \`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">api</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 目录下的文件自动跳过任何处理</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用异步函数处理 I/O 绑定任务</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 理解并遵循 @backend\\common\\response\\response_schema.py 的返回模式</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 保持 API 响应格式的一致性</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 性能优化规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 接口函数内的阻塞型事件使用 run_in_threadpool 处理</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 尽量减少阻塞 I/O 操作</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 在所有数据库调用和外部 API 请求中使用异步操作</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用 Redis 工具 @backend\\database\\redis.py，对静态数据和频繁访问的数据实施缓存</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 优先考虑 API 性能指标（响应时间、延迟、吞吐量）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 错误处理规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用 FastAPI 的异常处理机制</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 统一错误响应格式</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 根据错误工厂 @backend\\common\\exception\\errors.py 提供清晰的错误信息和错误码</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 记录关键错误信息到日志系统 @backend\\common\\log.py</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 数据验证规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用 Pydantic 模型进行数据验证</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 定义清晰的请求和响应模型，参考：@backend\\app\\admin\\schema\\user.py</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 不要新增字段验证器</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 提供有意义的验证错误信息</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 强力约束</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">当新增功能或者报错时，必须验证检查</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> app/新增功能/api</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> app/新增功能/crud</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> app/新增功能/model</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> app/新增功能/schema</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> app/新增功能/service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">内代码是否能互相验证</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h3><div class="hint-container note"><p class="hint-container-title">注</p><p>此规则可用于任何 Python 3.10+ 项目</p></div><div class="language-mdc line-numbers-mode" data-highlighter="shiki" data-ext="mdc" style="--shiki-dark:#abb2bf;--shiki-light:#383A42;--shiki-dark-bg:#282c34;--shiki-light-bg:#FAFAFA;"><pre class="shiki shiki-themes one-dark-pro one-light vp-code"><code class="language-mdc"><span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 角色</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">您是 Python 3.10+ 方面的专家，请严格遵守以下编码规则：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 类型注解规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用 Python 3.10+ 的类型/注解语法</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 只在必要时使用 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">Any</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 类型，如果使用了则必须保留</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 为所有函数参数和返回值添加类型注解，args, kwargs 参数直接忽略注解</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 为字典返回值添加具体的类型注解（如 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">dict[str, Any]</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">）</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 为列表返回值添加具体的类型注解（如 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">list[dict[str, str]]</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 文档注释规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 不要在文件开头添加注释</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 函数文档格式如下：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    1.</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 有参数的函数：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用多行文档字符串</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 跳过第一行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 编写函数文档</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 空一行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 参数说明格式为 &quot;:param 参数名: 参数说明&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 返回说明格式为 &quot;:return: 不添加返回说明&quot;</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    2.</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 无参数的函数：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用单行文档字符串</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 只写函数描述</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 描述和引号在同一行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">    3.</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 通用要求：</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 函数描述要简洁明了</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 不需要举例说明</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">        -</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 中英文之间要有空格</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 参数说明要具体和清晰</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 如果函数没有入参且描述只有简短文字，那么引号和内容写在同一行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 如果函数被 model_validator 或 field_validator 注释，则只需添加函数描述即可</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 代码逻辑规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 在保证逻辑清晰的情况下，尽量避免使用多元表达式（如三元运算符）</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 保持代码的可读性和可维护性</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用提前返回模式简化代码</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 移除不必要的中间变量</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 添加适当的空行，提高代码可读性</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 优先处理错误和边缘案例</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 只要必要时添加 try</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 对错误条件使用提前返回，以避免嵌套较深的 if 语句</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 避免不必要的 else 语句，而应使用 if-return 模式</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 实施适当的错误记录和用户友好型错误信息</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用自定义错误类型或错误工厂进行一致的错误处理</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 代码格式规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 统一代码风格</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 保持适当的空行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 优化长行（超过 120 个字符）的格式</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用括号进行换行</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 保持一致的缩进</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 代码注释规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 每个 py 文件开头都需添加以下内容</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    \`\`\`</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    #!/usr/bin/env python3</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    # -*- coding: utf-8 -*-</span></span>
<span class="line"><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;">    \`\`\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 合理的注释，避免不必要的注释</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 中英文之间应包加空格</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 注释文字描述应具体和清晰</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 注释要让人视觉上更清晰</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 命名规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 变量名要具有描述性</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 避免使用单字母变量名（除非是循环变量）</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 使用下划线命名法（snake_case）</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 类名使用大驼峰命名法（PascalCase）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E06C75;--shiki-light:#E45649;">## 函数定义规范</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 纯函数使用 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">def</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 异步操作使用 </span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span><span style="--shiki-dark:#98C379;--shiki-light:#383A42;">async def</span><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">\`</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 函数尽量单一职责，避免过于复杂的函数，但也不要过于琐碎</span></span>
<span class="line"><span style="--shiki-dark:#E5C07B;--shiki-light:#383A42;">-</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#383A42;"> 不要擅自修改任何参数命名</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)])])}const t=i(e,[["render",p]]),d=JSON.parse('{"path":"/backend/ide/cursor.html","title":"cursor","lang":"zh-CN","frontmatter":{"title":"cursor","description":"我们在 cursor 中定做了一些规则，或许可以帮助您更好的使用 AI 生成代码 查看 cursor 官方文档：rules-for-ai，然后添加以下规则 注意 我们未对规则进行 token 消耗量测试，请根据实际情况自行抉择 Cursor 官网地址 fba 注 此规则仅限用于 fba 项目 Python 注 此规则可用于任何 Python 3.10+ 项目","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"cursor\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-06T09:43:16.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://fastapi-practices.github.io/fastapi_best_architecture_docs/fastapi_best_architecture_docs/backend/ide/cursor.html"}],["meta",{"property":"og:site_name","content":"FastAPI Best Architecture"}],["meta",{"property":"og:title","content":"cursor"}],["meta",{"property":"og:description","content":"我们在 cursor 中定做了一些规则，或许可以帮助您更好的使用 AI 生成代码 查看 cursor 官方文档：rules-for-ai，然后添加以下规则 注意 我们未对规则进行 token 消耗量测试，请根据实际情况自行抉择 Cursor 官网地址 fba 注 此规则仅限用于 fba 项目 Python 注 此规则可用于任何 Python 3.10+ 项目"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-06T09:43:16.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-06T09:43:16.000Z"}]]},"readingTime":{"minutes":0.41,"words":122},"git":{"createdTime":1742538228000,"updatedTime":1754473396000},"autoDesc":true,"filePathRelative":"backend/ide/cursor.md","headers":[],"bulletin":true}');export{t as comp,d as data};
